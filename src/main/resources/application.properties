
server.port=9001
spring.application.name=springbootdemo
server.servlet.context-path=/springbootdemo
#########################################
######thymeleaf配置######
#########################################
###文件路径
spring.thymeleaf.prefix=classpath:/templates/
##后缀
spring.thymeleaf.suffix=.html
##默认HTML5，会校验模板，LEGACYHTML5表示去掉模板校验，结合nekohtml依赖使用
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
##清除缓存，thymeleaf热部署，修改页面不需要重启
spring.thymeleaf.cache=false
#********************************#

########################################################
### i18n 国际化配置。使得thymeleaf中可以使用#{aa.aa}获取messages.properties中的值
########################################################
#指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages
spring.messages.basename=i18n/messages
#设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1
spring.messages.cache-duration=3600
#设定Message bundles的编码，默认: UTF-8
spring.messages.encoding=UTF-8
#********************************#

#########################################
######mysql配置######
#########################################
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/testdb?serverTimezone=GMT
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#低版本的mysql需要配置com.mysql.jdbc.Driver驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
 # druid连接池配置
 #初始化大小
spring.datasource.druid.initial-size=1
#最小
spring.datasource.druid.min-idle=1
#最大
spring.datasource.druid.max-active=20
 # 获取连接等待超时的时间，单位是毫秒
spring.datasource.druid.max-wait=60000
#间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connect-properties.=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
 # 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
#********************************#


#########################################
######mybatis-plus######
#########################################
# 如果是放在src/main/java目录下 classpath:/com/mistra/axela/*/mapper/*Mapper.xml
# 如果是放在resource目录 classpath:/mapper/*Mapper.xml
mybatis-plus.mapper-locations=classpath:mapper/*.xml
#实体扫描，多个package用逗号或者分号分隔
mybatis-plus.type-aliases-package=com.example.demo.entity
#执行SQL打印日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl



#########################################
######pagehelper分页插件######
#########################################
#pagehelper.helperDialect=mysql
#pagehelper.reasonable=true
#pagehelper.supportMethodsArguments=true
#pagehelper.params=countSql
#********************************#

#########################################
######redis######
#########################################
spring.redis.host=localhost
spring.redis.port=6379
# Redis数据库索引（默认为0）  
spring.redis.database=0
# Redis服务器连接密码（默认为空）  
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）  
spring.redis.jedis.pool.max-active=1024
# 连接池最大阻塞等待时间（使用负值表示没有限制）  
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接  
spring.redis.jedis.pool.max-idle=200
# 连接池中的最小空闲连接  
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）  
spring.redis.timeout=10000
#redis配置结束
spring.redis.block-when-exhausted=true
#********************************#

#########################################
######log######
#########################################
logging.level.org.springframework.boot.autoconfigure=ERROR



##############dubbo+zookeeper#############
spring.dubbo.application.id=springboot-demo-provider
spring.dubbo.application.name=springboot-demo-provider
spring.dubbo.registry.address=zookeeper://127.0.0.1:2181
spring.dubbo.protocol.id=dubbo
spring.dubbo.protocol.name=dubbo
spring.dubbo.protocol.port=20880
spring.dubbo.protocol.status=server
#spring.dubbo.scan=com.example.demo.service.provider

############rabbitmq####
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

####apollo############
# app.id=springbootdemo
# set apollo meta server address, adjust to actual address if necessary
# apollo.meta=http://192.168.152.201:8080






